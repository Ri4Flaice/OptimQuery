networks:
  common-network:
    name: common-network
    driver: bridge

services:
  optimquery-db:
    container_name: optimquery-db
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: OptimQueryDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - optimquery-db:/var/lib/postgresql/data
    networks:
      - common-network
    command: [ "postgres", "-p", "5432" ]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -h localhost -p 5432" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  
  optimquery-service:
    container_name: optimquery-service
    image: optimquery-service
    build:
      context: .
      dockerfile: src/OptimQuery.WebApi/Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      optimquery-db:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - common-network

volumes:
  optimquery-db: